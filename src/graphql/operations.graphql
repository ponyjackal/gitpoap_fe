query getAllStats {
  totalContributors
  lastMonthContributors
  totalClaims
  lastMonthClaims
  totalRepos
  lastMonthRepos
}

query leaders($count: Float!) {
  mostHonoredContributors(count: $count) {
    profile {
      address
      id
      ensAvatarImageUrl
    }
    claimsCount
  }
}

query repoLeaders($repoId: Float!, $page: Float, $perPage: Float) {
  repoMostHonoredContributors(repoId: $repoId, page: $page, perPage: $perPage) {
    profile {
      address
      id
      ensAvatarImageUrl
    }
    claimsCount
  }
}

query gitpoapByPoapEventId($poapEventId: Int!) {
  gitPOAP(where: { poapEventId: $poapEventId }) {
    id
    poapEventId
    status
    project {
      repos {
        name
      }
    }
  }
}

query gitPOAPHolders($gitPOAPId: Float!, $page: Float, $perPage: Float, $sort: String) {
  gitPOAPHolders(gitPOAPId: $gitPOAPId, page: $page, perPage: $perPage, sort: $sort) {
    totalHolders
    holders {
      address
      githubHandle
      gitPOAPCount
      profileId
      bio
      personalSiteUrl
      twitterHandle
      ensAvatarImageUrl
    }
  }
}

query mostClaimedGitPoaps($count: Float!) {
  mostClaimedGitPOAPs(count: $count) {
    claimsCount
    gitPOAP {
      id
      project {
        repos {
          name
          organization {
            name
          }
        }
      }
    }
    event {
      name
      image_url
    }
  }
}

query profile($address: String!) {
  profileData(address: $address) {
    id
    bio
    name
    githubHandle
    twitterHandle
    personalSiteUrl
    address
    ensName
    isVisibleOnLeaderboard
    ensAvatarImageUrl
  }
}

query searchForString($text: String!) {
  search(text: $text) {
    profilesByAddress {
      id
      address
      ensAvatarImageUrl
    }
    profileByENS {
      profile {
        id
        address
        ensAvatarImageUrl
      }
      ens
    }
  }
}

query gitPoaps($address: String!, $sort: String, $page: Float, $perPage: Float) {
  userPOAPs(address: $address, sort: $sort, page: $page, perPage: $perPage) {
    totalGitPOAPs
    gitPOAPs {
      claim {
        pullRequestEarned {
          id
          repo {
            name
            organization {
              name
            }
          }
        }
        gitPOAP {
          id
        }
        status
        poapTokenId
      }
      event {
        name
        image_url
        description
      }
      prCount
    }
  }
}

query repoGitPoaps($repoId: Float!, $sort: String, $page: Float, $perPage: Float) {
  repoGitPOAPs(repoId: $repoId, sort: $sort, page: $page, perPage: $perPage) {
    totalGitPOAPs
    gitPOAPs {
      gitPOAP {
        id
        project {
          repos {
            name
          }
        }
      }
      event {
        name
        image_url
        description
      }
    }
  }
}

query openClaims($githubId: Float!) {
  userClaims(githubId: $githubId) {
    claim {
      id
      pullRequestEarned {
        repo {
          name
          organization {
            name
          }
        }
      }
      status
      gitPOAP {
        id
      }
    }
    event {
      name
      image_url
      description
    }
  }
}

query recentRepos($count: Float!) {
  recentlyAddedRepos(count: $count) {
    id
    name
    createdAt
    organization {
      name
    }
  }
}

query gitPoapEvent($id: Float!) {
  gitPOAPEvent(id: $id) {
    gitPOAP {
      project {
        repos {
          id
          name
          organization {
            id
            name
            description
            twitterHandle
            url
          }
        }
      }
    }
    event {
      name
      image_url
      description
    }
  }
}

query allPoaps($address: String!, $sort: String, $page: Float, $perPage: Float) {
  userPOAPs(address: $address, sort: $sort, page: $page, perPage: $perPage) {
    totalPOAPs
    poaps {
      event {
        id
        name
        image_url
      }
      tokenId
    }
  }
}

query featuredPoaps($address: String!) {
  profileFeaturedPOAPs(address: $address) {
    gitPOAPs {
      claim {
        id
        pullRequestEarned {
          id
          repo {
            name
            organization {
              name
            }
          }
        }
        gitPOAP {
          id
        }
      }
      poap {
        event {
          id
          image_url
          name
          description
        }
        tokenId
      }
    }
    poaps {
      event {
        id
        name
        description
        image_url
      }
      tokenId
    }
  }
}

query adminClaims($count: Int!) {
  claims(take: $count, orderBy: { mintedAt: desc }, where: { status: { equals: CLAIMED } }) {
    id
    user {
      id
      githubHandle
    }
    status
    poapTokenId
    address
    updatedAt
    createdAt
    mintedAt
    pullRequestEarned {
      githubPullNumber
      repo {
        id
        name
        organization {
          id
          name
        }
      }
    }
    gitPOAP {
      id
      name
      year
      imageUrl
    }
  }
}

query repoData($repoId: Float!) {
  repoData(repoId: $repoId) {
    id
    name
    githubRepoId
    organization {
      id
      name
      description
      twitterHandle
      url
    }
    project {
      gitPOAPs {
        id
        imageUrl
        name
      }
    }
    contributorCount
    mintedGitPOAPCount
    gitPOAPCount
  }
  repoStarCount(repoId: $repoId)
}

query repoSEOById($repoId: Float!) {
  repoData(repoId: $repoId) {
    id
    name
    organization {
      name
    }
  }
}

query repoSEOByName($orgName: String!, $repoName: String!) {
  repoData(orgName: $orgName, repoName: $repoName) {
    id
    name
    organization {
      name
    }
  }
}

query repoStarCount($repoId: Float!) {
  repoStarCount(repoId: $repoId)
}

query allRepos($count: Int!) {
  repos(take: $count, orderBy: { createdAt: desc }) {
    id
    name
    organization {
      name
    }
    createdAt
    project {
      gitPOAPs {
        id
      }
    }
  }
}

# Query primarily used on the Repos page
query allReposOnRepoPage($sort: String, $page: Float, $perPage: Float) {
  allRepos(sort: $sort, page: $page, perPage: $perPage) {
    id
    name
    githubRepoId
    organization {
      name
    }
    project {
      gitPOAPs {
        id
      }
    }
  }
}

query repoSearchOnRepoPage($take: Int, $search: String) {
  repos(
    take: $take
    where: {
      OR: [
        { name: { contains: $search, mode: insensitive } }
        { organization: { is: { name: { contains: $search, mode: insensitive } } } }
      ]
    }
  ) {
    id
    name
    githubRepoId
    organization {
      name
    }
    project {
      gitPOAPs {
        id
      }
    }
  }
}

query organizationData($orgId: Float!) {
  organizationData(orgId: $orgId) {
    id
    name
    description
    twitterHandle
    url
    contributorCount
    gitPOAPCount
    mintedGitPOAPCount
    repoCount
  }
}

query organizationSEOById($orgId: Float!) {
  organizationData(orgId: $orgId) {
    id
    name
  }
}

query organizationSEOByName($orgName: String!) {
  organizationData(orgName: $orgName) {
    id
    name
  }
}

query organizationsList($sort: String, $page: Float, $perPage: Float) {
  allOrganizations(sort: $sort, page: $page, perPage: $perPage) {
    id
    name
    githubOrgId
    repos {
      id
      project {
        gitPOAPs {
          id
        }
      }
    }
  }
}

query organizationRepos($orgId: Float!, $sort: String, $page: Float, $perPage: Float) {
  organizationRepos(orgId: $orgId, sort: $sort, page: $page, perPage: $perPage) {
    id
    name
    contributorCount
    mintedGitPOAPCount
    organization {
      name
    }
  }
}

query totalRepoCount {
  aggregateRepo {
    _count {
      id
    }
  }
}

query totalOrganizationCount {
  aggregateOrganization {
    _count {
      id
    }
  }
}

query claimsSince($date: DateTime) {
  claims(where: { status: { equals: CLAIMED }, mintedAt: { gt: $date } }) {
    id
  }
}

query reposSince($date: DateTime) {
  repos(where: { createdAt: { gt: $date } }) {
    id
  }
}

query gitPOAPsSince($date: DateTime) {
  gitPOAPS(where: { createdAt: { gt: $date } }) {
    id
  }
}

query profilesSince($date: DateTime) {
  profiles(where: { createdAt: { gt: $date } }) {
    id
  }
}

query orgsSince($date: DateTime) {
  organizations(where: { createdAt: { gt: $date } }) {
    id
  }
}

query claimsCount {
  aggregateClaim {
    _count {
      id
    }
  }
}

query totalUsers {
  aggregateUser(where: { githubHandle: { not: { equals: "" } } }) {
    _count {
      githubHandle
    }
  }
}

query totalProfiles {
  aggregateProfile {
    _count {
      id
    }
  }
}

query totalProfilesWithGitHubHandle {
  aggregateProfile(where: { githubHandle: { not: { equals: "" } } }) {
    _count {
      id
    }
  }
}

query totalDistinctUsersWithClaims {
  claims(distinct: userId, where: { status: { equals: CLAIMED } }) {
    id
  }
}

query mintedClaimsCount {
  aggregateClaim(where: { status: { equals: CLAIMED } }) {
    _count {
      id
    }
  }
}

query allGitPOAPIds {
  gitPOAPS {
    id
  }
}

query reposGetStaticPaths {
  repos {
    id
    name
    organization {
      name
    }
  }
}

query orgsGetStaticPaths {
  organizations {
    id
    name
  }
}

query countClaimsWithPullRequestEarned {
  aggregateClaim(where: { pullRequestEarned: { isNot: null } }) {
    _count {
      id
    }
  }
}

# For the search bar
query repoSearchByName($search: String!, $take: Int = 4) {
  repos(
    take: $take
    where: { name: { contains: $search, mode: insensitive } }
    orderBy: { lastPRUpdatedAt: desc }
  ) {
    id
    name
    githubRepoId
    organization {
      name
    }
    project {
      id
      gitPOAPs(take: 1, where: { isEnabled: { equals: true } }) {
        id
        name
        description
        imageUrl
      }
    }
  }
}

# For the search bar
query orgSearchByName($search: String!, $take: Int = 4) {
  organizations(take: $take, where: { name: { contains: $search, mode: insensitive } }) {
    id
    name
    githubOrgId
    repos(orderBy: { lastPRUpdatedAt: desc }) {
      id
      name
      lastPRUpdatedAt
      project {
        gitPOAPs(take: 1, where: { isEnabled: { equals: true } }) {
          id
          name
          description
          imageUrl
        }
      }
    }
  }
}

# For the search bar
query gitPOAPSearchByName($search: String!, $take: Int = 4) {
  gitPOAPS(
    take: $take
    where: { name: { contains: $search, mode: insensitive }, isEnabled: { equals: true } }
  ) {
    id
    name
    description
    imageUrl
    project {
      repos(take: 1) {
        name
        organization {
          name
        }
      }
    }
  }
}

query trendingRepos($count: Float!, $numDays: Float!) {
  trendingRepos(count: $count, numDays: $numDays) {
    id
    name
    githubRepoId
    organization {
      id
      name
      description
      twitterHandle
      url
    }
    project {
      gitPOAPs {
        id
        imageUrl
      }
    }
    contributorCount
    mintedGitPOAPCount
  }
}
